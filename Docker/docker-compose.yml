version: "3"

services:
  cs-v4:
    image: chirpstack/chirpstack:4
    command: -c /etc/chirpstack
    restart: unless-stopped
    volumes:
      - ./configuration/chirpstack:/etc/chirpstack
      - ./lorawan-devices:/opt/lorawan-devices
    depends_on:
      - postgres
      - mosquitto
      - redis
    environment:
      - MQTT_BROKER_HOST=mosquitto
      - REDIS_HOST=redis
      - POSTGRESQL_HOST=postgres
      - INFLUXDB=influxdb
    ports:
      - 8080:8080
    networks:
      fix-ip:
        ipv4_address: 10.5.0.2

  cs-gw-bridge-eu868:
    image: chirpstack/chirpstack-gateway-bridge:4
    restart: unless-stopped
    command: -c /etc/chirpstack-gateway-bridge-eu868/chirpstack-gateway-bridge.toml
    ports:
      - 1709:1709/udp
    volumes:
      - ./configuration/chirpstack-gateway-bridge-eu868:/etc/chirpstack-gateway-bridge-eu868
    environment:
      - INTEGRATION__MQTT__EVENT_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/event/{{ .EventType }}
      - INTEGRATION__MQTT__STATE_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/state/{{ .StateType }}
      - INTEGRATION__MQTT__COMMAND_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/command/#
    depends_on:
      - mosquitto
    networks:
      fix-ip:
        ipv4_address: 10.5.0.12

  cs-gw-bridge-as923-3:
    image: chirpstack/chirpstack-gateway-bridge:4
    restart: unless-stopped
    ports:
      - 1708:1708/udp
    volumes:
      - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
    environment:
      - INTEGRATION__MQTT__EVENT_TOPIC_TEMPLATE=as923_3/gateway/{{ .GatewayID }}/event/{{ .EventType }}
      - INTEGRATION__MQTT__STATE_TOPIC_TEMPLATE=as923_3/gateway/{{ .GatewayID }}/state/{{ .StateType }}
      - INTEGRATION__MQTT__COMMAND_TOPIC_TEMPLATE=as923_3/gateway/{{ .GatewayID }}/command/#
    depends_on:
      - mosquitto
    networks:
      fix-ip:
        ipv4_address: 10.5.0.11

  cs-gw-bridge-basicstation:
    image: chirpstack/chirpstack-gateway-bridge:4
    restart: unless-stopped
    command: -c /etc/chirpstack-gateway-bridge/chirpstack-gateway-bridge-basicstation-eu868.toml
    ports:
      - 3001:3001
    volumes:
      - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
    depends_on:
      - mosquitto
    networks:
      fix-ip:
        ipv4_address: 10.5.0.10

  cs-rest-api:
    image: chirpstack/chirpstack-rest-api:4
    restart: unless-stopped
    command: --server chirpstack:8080 --bind 0.0.0.0:8090 --insecure
    ports:
      - 8090:8090
    depends_on:
      - cs-v4
    networks:
      fix-ip:
        ipv4_address: 10.5.0.9

  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - postgresqldata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
    networks:
      fix-ip:
        ipv4_address: 10.5.0.8

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save 300 1 --save 60 100 --appendonly no
    volumes:
      - redisdata:/data
    networks:
      fix-ip:
        ipv4_address: 10.5.0.7

  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    ports:
      - 1883:1883
    volumes:
      - ./configuration/mosquitto/config/:/mosquitto/config/
    networks:
      fix-ip:
        ipv4_address: 10.5.0.3

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    networks:
      fix-ip:
        ipv4_address: 10.5.0.4
      
  influxdb:
    image: influxdb:latest
    volumes:
      # Mount for influxdb data directory and configuration
      - ./data:/var/lib/influxdb2:rw
    ports:
      - "8086:8086"
    networks:
      fix-ip:
        ipv4_address: 10.5.0.5

  # Use the influx cli to set up an influxdb instance. 
  influxdb_cli:
    links:
      - influxdb
    image: influxdb:latest
    volumes:
      # Mount for influxdb data directory and configuration
      - /home/svl/influxdb2:/var/lib/influxdb2:rw
    environment: 
       # Use these same configurations parameters in your telegraf configuration, mytelegraf.conf.
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=teresa1963
      - DOCKER_INFLUXDB_INIT_ORG=RAKwireless
      - DOCKER_INFLUXDB_INIT_BUCKET=RAKwireless
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mytoken
    entrypoint: ["./entrypoint.sh"]
    restart: on-failure:10
    depends_on:
      - influxdb
    networks:
      fix-ip:
        ipv4_address: 10.5.0.6

  udp-packet-forwarder-eu868:
    image: rakwireless/udp-packet-forwarder:latest
    container_name: udp-packet-forwarder-eu868
    restart: unless-stopped
    privileged: true
    network_mode: host
    environment:
      MODEL: "RAK5146"
      INTERFACE: "USB"
      #DEVICE: "/dev/spidev0.0"
      DEVICE: "/dev/ttyACM1"
      RESET_GPIO: 17
      POWER_EN_GPIO: 0
      GATEWAY_EUI: "AC1F09FFFE000000"
      SERVER_HOST: localhost
      SERVER_PORT: 1701
      BAND: "eu_863_870"
      HAS_GPS: "0"
      HAS_LTE: "0"
      GPS_LATITUDE: 14.42139
      GPS_LONGITUDE: 121.00704
      GPS_ALTITUDE: 30

  udp-packet-forwarder-as923-3:
    image: rakwireless/udp-packet-forwarder:latest
    container_name: udp-packet-forwarder-as923-3
    restart: unless-stopped
    privileged: true
    network_mode: host
    environment:
      MODEL: "RAK2287"
      INTERFACE: "SPI"
      DEVICE: "/dev/spidev0.1"
      #DEVICE: "/dev/ttyACM0"
      RESET_GPIO: 6
      POWER_EN_GPIO: 0
      GATEWAY_EUI: "AC1F09FFFE000000"
      SERVER_HOST: localhost
      SERVER_PORT: 1700
      BAND: "as_915_921"
      HAS_GPS: "0"
      HAS_LTE: "0"
      GPS_LATITUDE: 14.42139
      GPS_LONGITUDE: 121.00704
      GPS_ALTITUDE: 30

volumes:
  grafana-data:
  influxdb2:
  postgresqldata:
  redisdata:

networks:
  fix-ip:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1
