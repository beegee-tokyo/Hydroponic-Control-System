[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Hydroponic System",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ea04ed65566cc035",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "MQTT-Receive",
        "topic": "application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/#",
        "qos": "2",
        "datatype": "json",
        "broker": "eb21a8c4eb60d964",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 540,
        "wires": [
            [
                "811ed5459d95c417",
                "d2d86295e1f1fa64"
            ]
        ]
    },
    {
        "id": "811ed5459d95c417",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Check",
        "func": "var newMsg = [];\n// Watertank\nif (msg.topic.indexOf(global.get(\"sensor_dev_eui\")) != -1) {\n    if (typeof (msg.payload[\"object\"]) != \"undefined\") {\n        if (typeof (msg.payload[\"object\"][\"analog_in_61\"]) != \"undefined\") {\n            node.warn(\"analog_in_61 found \" + msg.payload[\"object\"][\"analog_in_61\"]);\n            msg['water_level'] = msg.payload[\"object\"][\"analog_in_61\"];\n            msg['battery'] = msg.payload[\"object\"][\"voltage_1\"];\n            msg['overflow'] = msg.payload[\"object\"][\"presence_63\"];\n            msg['low_level'] = msg.payload[\"object\"][\"presence_62\"];\n            msg['type'] = \"Waterlevel\";\n            msg.payload = msg['water_level'];\n\n            // If overflow send a downlink\n            if (msg['overflow'] == 1) {\n                node.warn(\"Overflow\");\n                msg['todo'] = \"Downlink\";\n                msg['payload'] = \"{\\\"devEui\\\":\\\"\" + global.get(\"relay_dev_eui\") + \"\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"qlUHAQGqVQ==\\\"}\"\n                msg['topic'] = \"application/\" + global.get(\"app_id\") + \"/device/\" + global.get(\"relay_dev_eui\") + \"/command/down\";\n                msg['qos'] = 2;\n            }\n            else {\n                node.warn(\"No Overflow\");\n                msg['todo'] = \"None\";\n            }\n        }\n    }\n}\n\n// TDS sensor\nif (msg.topic.indexOf(global.get(\"sensor_dev_eui\")) != -1) { \n    if (typeof (msg.payload[\"object\"]) != \"undefined\") {\n        if (typeof (msg.payload[\"object\"][\"concentration_64\"]) != \"undefined\") { // concentration_64 == TDS value\n            node.warn(\"concentration_64 found\");\n            msg['tds_value'] = msg.payload[\"object\"][\"concentration_64\"];// concentration_64\n            msg['type'] = \"TDS-Sensor\";\n        }\n        if (typeof (msg.payload[\"object\"][\"presence_64\"]) != \"undefined\") { // concentration_64 == TDS value\n            node.warn(\"presence_64 found\");\n            var valve_status = msg.payload[\"object\"][\"presence_64\"];\n            // If overflow send a downlink\n            if (valve_status == 1) {\n                node.warn(\"TDS low, open valve \" + msg['tds_value']);\n                msg['todo'] = \"Downlink\";\n                msg['payload'] = \"{\\\"devEui\\\":\\\"\" + global.get(\"relay_dev_eui\") + \"\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"qlUBAQ==\\\"}\" // pump on AA550101\n                msg['topic'] = \"application/\" + global.get(\"app_id\") + \"/device/\" + global.get(\"relay_dev_eui\") + \"/command/down\";\n                msg['qos'] = 2;\n                msg['email'] = true;\n            }\n            else {\n                node.warn(\"TDS Ok \" + msg['tds_value']);\n                msg['todo'] = \"None\";\n            }\n            node.warn(\"Payload: \" + msg.payload);\n            node.warn(\"Topic: \" + msg.topic);\n        } else {\n            node.warn(\"presence_64 not found\");\n        }\n    }\n}\n\n// Control device\nif (msg.topic.indexOf(global.get(\"relay_dev_eui\")) != -1) { \n    if (typeof (msg.payload[\"object\"]) != \"undefined\") {\n        if (typeof (msg.payload[\"object\"][\"presence_2\"]) != \"undefined\") {\n            node.warn(\"presence_2\");\n            msg['presence_2'] = msg.payload[\"object\"][\"presence_2\"];\n            msg['type'] = \"Relay Device\";\n\n            // TODO Set UI switch to current status if override is active\n        }\n    }\n}\n\n// Light sensor\nif (msg.topic.indexOf(global.get(\"sensor_dev_eui\")) != -1) {\n    if (typeof (msg.payload[\"object\"]) != \"undefined\") {\n        if (typeof (msg.payload[\"object\"][\"illuminance\"]) != \"undefined\") {\n            node.warn(\"illuminance\");\n            msg['illuminance'] = msg.payload[\"object\"][\"illuminance\"];\n            msg['type'] = \"Light Sensor\";\n\n            // If overflow send a downlink\n            if (msg['illuminance'] >= 50) {\n                node.warn(\"Bright, lights off: \" + msg['illuminance']);\n                msg['todo'] = \"Downlink\";\n                msg['payload'] = \"{\\\"devEui\\\":\\\"\" + global.get(\"relay_dev_eui\") + \"\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"qlUAAA==\\\"}\" // AA550101\n                msg['topic'] = \"application/\" + global.get(\"app_id\") + \"/device/\" + global.get(\"relay_dev_eui\") + \"/command/down\";\n                msg['qos'] = 2;\n            }\n            else {\n                node.warn(\"Dark, lights on: \" + msg['illuminance']);\n                msg['todo'] = \"Downlink\";\n                msg['payload'] = \"{\\\"devEui\\\":\\\"\" + global.get(\"relay_dev_eui\") + \"\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"qlUAAQ==\\\"}\" // AA550100\n                msg['topic'] = \"application/\" + global.get(\"app_id\") + \"/device/\" + global.get(\"relay_dev_eui\") + \"/command/down\";\n                msg['qos'] = 2;\n            }\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nnode.warn(\"Restart V2\");",
        "libs": [],
        "x": 250,
        "y": 540,
        "wires": [
            [
                "ef54917c25ea6a5c"
            ]
        ]
    },
    {
        "id": "06331141f0acd9d6",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Watertank Actions",
        "property": "todo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Downlink",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "None",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 684,
        "wires": [
            [
                "e8218aba6d3e1046",
                "dc19f50e80bf1284"
            ],
            []
        ]
    },
    {
        "id": "ef54917c25ea6a5c",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "What Device",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TDS-Sensor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Light Sensor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Waterlevel",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 540,
        "wires": [
            [
                "91d915157e19cea0",
                "622817e7f5ef06e7"
            ],
            [
                "95caf47240db4101"
            ],
            [
                "06331141f0acd9d6"
            ],
            []
        ]
    },
    {
        "id": "91d915157e19cea0",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "TDS Sensor Actions",
        "property": "todo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Downlink",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "None",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 520,
        "wires": [
            [
                "dc19f50e80bf1284"
            ],
            []
        ]
    },
    {
        "id": "95caf47240db4101",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Light Actions",
        "property": "todo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Downlink",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "None",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 630,
        "wires": [
            [
                "dc19f50e80bf1284"
            ],
            []
        ]
    },
    {
        "id": "e8218aba6d3e1046",
        "type": "ui_audio",
        "z": "f6f2187d.f17ca8",
        "name": "Overflow! Check Valve",
        "group": "d7227fcd391266e7",
        "voice": "urn:moz-tts:sapi:Microsoft Zira - English (United States)?en-US",
        "always": "",
        "x": 1200,
        "y": 680,
        "wires": []
    },
    {
        "id": "07ca97fdc5512cbc",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "64502c3307ffe74d",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Nutrition Refill",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"todo\":\"send\"}",
        "payloadType": "json",
        "topic": "\"application/command/down\"",
        "topicType": "str",
        "x": 80,
        "y": 460,
        "wires": [
            [
                "74c1791e7bbb14e1"
            ]
        ]
    },
    {
        "id": "ce4a30598d147719",
        "type": "ui_slider",
        "z": "f6f2187d.f17ca8",
        "name": "Nutrition Level",
        "label": "Nutrition Level",
        "tooltip": "",
        "group": "64502c3307ffe74d",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "value",
        "topicType": "msg",
        "min": "600",
        "max": "1600",
        "step": "100",
        "className": "",
        "x": 80,
        "y": 340,
        "wires": [
            [
                "dfa21cf220786d7e"
            ]
        ]
    },
    {
        "id": "dfa21cf220786d7e",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create Payload",
        "func": "node.warn(\"Received: \" + msg.payload);\nswitch (msg.payload)\n{\n    case 600:\n        node.warn(\"level 600\");\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x02, 0x58]);\n        break;\n    case 700:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x02, 0xBC]);\n        break;\n    case 800:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x03, 0x20]);\n        break;\n    case 900:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x03, 0x84]);\n        break;\n    case 1000:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x03, 0xe8]);\n        break;\n    case 1100:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x04, 0x4c]);\n        break;\n    case 1200:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x04, 0xb0]);\n        break;\n    case 1300:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x05, 0x14]);\n        break;\n    case 1400:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x05, 0x78]);\n        break;\n    case 1500:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x05, 0xdc]);\n        break;\n    case 1600:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x06, 0x40]);\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 340,
        "wires": [
            [
                "0ca72e9092a1eba9"
            ]
        ]
    },
    {
        "id": "0ca72e9092a1eba9",
        "type": "base64",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "action": "",
        "property": "bvalue",
        "x": 680,
        "y": 340,
        "wires": [
            [
                "cd08a6cef36056c2"
            ]
        ]
    },
    {
        "id": "cd08a6cef36056c2",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create MQTT",
        "func": "msg['payload'] = \"{\\\"devEui\\\":\\\"\" + global.get(\"sensor_dev_eui\") +\"\\\", \\\"confirmed\\\":false,\\\"fPort\\\":11,\\\"data\\\":\\\"\" + msg.bvalue + \"\\\"}\" // new nutrition value\nnode.warn(\"Payload: \" + msg['payload']);\nmsg['topic'] = \"application/\" + global.get(\"app_id\") + \"/device/\" + global.get(\"sensor_dev_eui\") +\"/command/down\";\nmsg['qos'] = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 340,
        "wires": [
            [
                "dc19f50e80bf1284"
            ]
        ]
    },
    {
        "id": "8bc2cba06df853f0",
        "type": "ui_switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "label": "Pump Override",
        "tooltip": "",
        "group": "d7227fcd391266e7",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "decf2eaf11f7da9c"
            ]
        ]
    },
    {
        "id": "decf2eaf11f7da9c",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create Payload",
        "func": "node.warn(\"Received: \" + msg.payload);\nswitch (msg.payload)\n{\n    case true:\n        node.warn(\"Pump On\");\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x00, 0x01]);\n        break;\n    case false:\n        node.warn(\"Pump Off\");\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x00, 0x00]);\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 160,
        "wires": [
            [
                "c95baa92a2ee2b82"
            ]
        ]
    },
    {
        "id": "c95baa92a2ee2b82",
        "type": "base64",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "action": "",
        "property": "bvalue",
        "x": 680,
        "y": 160,
        "wires": [
            [
                "8099fc818e608ecf"
            ]
        ]
    },
    {
        "id": "8099fc818e608ecf",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create MQTT",
        "func": "msg['payload'] = \"{\\\"devEui\\\":\\\"\" + global.get(\"relay_dev_eui\") + \"\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"\" + msg.bvalue + \"\\\"}\" // water pump on/off\nmsg['topic'] = \"application/\" + global.get(\"app_id\") + \"/device/\" + global.get(\"relay_dev_eui\") + \"/command/down\";msg['qos'] = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 160,
        "wires": [
            [
                "dc19f50e80bf1284"
            ]
        ]
    },
    {
        "id": "d2d86295e1f1fa64",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Check",
        "func": "// TDS sensor\nif (msg.topic.indexOf(global.get(\"sensor_dev_eui\")) != -1) {\n    if (typeof (msg.payload[\"object\"]) != \"undefined\") {\n        if (typeof (msg.payload[\"object\"][\"concentration_64\"]) != \"undefined\") { // concentration_64 == TDS value\n            node.warn(\"concentration_64 found\");\n            msg['tds_value'] = msg.payload[\"object\"][\"concentration_64\"];\n            node.warn(\"tds_value \" + msg['tds_value']);\n        }\n        else {\n            msg['tds_value'] = 0;\n        }\n        if (typeof (msg.payload[\"object\"][\"analog_in_65\"]) != \"undefined\") { // analog_in_65 == pH value\n            node.warn(\"analog_in_65 found\");\n            msg['ph_value'] = Math.round((msg.payload[\"object\"][\"analog_in_65\"]) * 10.0);\n            node.warn(\"ph_value \" + msg['ph_value']);\n        }\n        else {\n            msg['ph_value'] = 0;\n        }\n        if (typeof (msg.payload[\"object\"][\"temperature\"]) != \"undefined\") { // temperature\n            node.warn(\"temperature found\");\n            msg['temp_value'] = Math.round((msg.payload[\"object\"][\"temperature\"]) * 10.0);\n            node.warn(\"temp_value \" + msg['temp_value']);\n        }\n        else {\n            msg['temp_value'] = 0;\n        }\n        if (typeof (msg.payload[\"object\"][\"humidity\"]) != \"undefined\") { // humidity\n            node.warn(\"humidity found\");\n            msg['humid_value'] = Math.round((msg.payload[\"object\"][\"humidity\"]) * 10.0);\n            node.warn(\"humid_value \" + msg['humid_value']);\n        }\n        else {\n            msg['humid_value'] = 0;\n        }\n\n        msg.bvalue = Buffer.from([0xAA, 0x55, 0xFF, (msg['tds_value'] >> 8) & 0x00ff, (msg['tds_value']) & 0x00ff\n            , (msg['ph_value'] >> 8) & 0x00ff, (msg['ph_value']) & 0x00ff\n            , (msg['temp_value'] >> 8) & 0x00ff, (msg['temp_value']) & 0x00ff\n            , (msg['humid_value'] >> 8) & 0x00ff, (msg['humid_value']) & 0x00ff]);\n        node.warn(\"Buffer \" + msg.bvalue);\n\n        msg.todo = \"OK\";\n    }\n    else\n    {\n        msg.todo = \"NOK\";\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nnode.warn(\"Restart V2\");",
        "libs": [],
        "x": 250,
        "y": 400,
        "wires": [
            [
                "3f9d0a22b6ae8d08"
            ]
        ]
    },
    {
        "id": "094d0eb0c7f8a69f",
        "type": "base64",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "action": "",
        "property": "bvalue",
        "x": 680,
        "y": 400,
        "wires": [
            [
                "16fcd54f00538432"
            ]
        ]
    },
    {
        "id": "16fcd54f00538432",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create MQTT",
        "func": "msg['payload'] = \"{\\\"devEui\\\":\\\"\" + global.get(\"display_dev_eui\") +\"\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"\" + msg.bvalue + \"\\\"}\" // display data\nnode.warn(\"Payload: \" + msg['payload']);\nmsg['topic'] = \"application/\" + global.get(\"app_id\") + \"/device/\" + global.get(\"display_dev_eui\") +\"/command/down\";\nmsg['qos'] = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 400,
        "wires": [
            [
                "dc19f50e80bf1284"
            ]
        ]
    },
    {
        "id": "3f9d0a22b6ae8d08",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Data?",
        "property": "todo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NOK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 400,
        "wires": [
            [
                "094d0eb0c7f8a69f"
            ],
            []
        ]
    },
    {
        "id": "1fbe12acd2c73cdf",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Inputs",
        "info": "Manual from UI or from Chirpstack MQTT",
        "x": 50,
        "y": 100,
        "wires": []
    },
    {
        "id": "3b7781f0c9d34dfc",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Data processing and action preparation",
        "info": "",
        "x": 330,
        "y": 100,
        "wires": []
    },
    {
        "id": "7b03ba1ba02d280e",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Output and Actions",
        "info": "",
        "x": 1210,
        "y": 100,
        "wires": []
    },
    {
        "id": "b177128091311cbc",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "LoRaWAN Node and Application definitions",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"relay_dev_eui\", \"ac1f09fffe000000\");\nglobal.set(\"sensor_dev_eui\", \"ac1f09fffe000000\");\nglobal.set(\"display_dev_eui\", \"ac1f09fffe000000\");\nglobal.set(\"app_id\", \"a852689f-0000-0000-0000-b073a96f5b7d\");\n\nnode.warn(\"relay_dev_eui = \" + global.get(\"relay_dev_eui\"));\nnode.warn(\"sensor_dev_eui = \" + global.get(\"sensor_dev_eui\"));\nnode.warn(\"display_dev_eui = \" + global.get(\"display_dev_eui\"));\nnode.warn(\"app_id = \" + global.get(\"app_id\"));",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "312cad5f034e6cb1",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Put your Node DevEUI and AppID here",
        "info": "",
        "x": 510,
        "y": 40,
        "wires": []
    },
    {
        "id": "74c1791e7bbb14e1",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create MQTT",
        "func": "node.warn(\"TDS low, open valve \" + msg['tds_value']);\nmsg['todo'] = \"Downlink\";\nmsg['payload'] = \"{\\\"devEui\\\":\\\"\" + global.get(\"relay_dev_eui\") + \"\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"qlUDAQ==\\\"}\" // pump long on AA550301\nmsg['topic'] = \"application/\" + global.get(\"app_id\") + \"/device/\" + global.get(\"relay_dev_eui\") + \"/command/down\";\nmsg['qos'] = 2;\n\nnode.warn(\"Payload: \" + msg.payload);\nnode.warn(\"Topic: \" + msg.topic);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 460,
        "wires": [
            [
                "dc19f50e80bf1284"
            ]
        ]
    },
    {
        "id": "3e660655ad4f7f0f",
        "type": "ui_form",
        "z": "f6f2187d.f17ca8",
        "name": "Water pump times",
        "label": "Water pump On/Off times (minutes)",
        "group": "d7227fcd391266e7",
        "order": 2,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "ON time",
                "value": "on_time",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "OFF time",
                "value": "off_time",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "on_time": "",
            "off_time": ""
        },
        "payload": "",
        "submit": "send",
        "cancel": "",
        "topic": "times",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 90,
        "y": 220,
        "wires": [
            [
                "d6bfce9c32d0b93c"
            ]
        ]
    },
    {
        "id": "d6bfce9c32d0b93c",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create Payload",
        "func": "if (typeof (msg.payload.on_time) != \"undefined\") {\n    if (typeof (msg.payload.off_time) != \"undefined\") {\n        if ((msg.payload.on_time > msg.payload.off_time) || (msg.payload.off_time < 15) || (msg.payload.on_time < 5)) {\n            node.warn(\"Wrong times\");\n            msg.todo = \"None\";\n            msg.payload = \"Wrong times\";\n\n        } else {\n            msg.payload.on_time = msg.payload.on_time * 60;\n            msg.payload.off_time = msg.payload.off_time * 60;\n            msg.bvalue = Buffer.from([0xaa, 0x55, 0x00, (msg.payload.on_time & 0xff000000) >> 24,\n                (msg.payload.on_time & 0x00ff0000) >> 16, (msg.payload.on_time & 0x0000ff00) >> 8,\n                (msg.payload.on_time & 0x000000ff), (msg.payload.off_time & 0xff000000) >> 24,\n                (msg.payload.off_time & 0x00ff0000) >> 16, (msg.payload.off_time & 0x0000ff00) >> 8,\n                (msg.payload.off_time & 0x000000ff)]);\n            msg.todo = \"Downlink\";\n            node.warn(\"Valid times found\");\n        }\n    } else {\n        node.warn(\"No OFF time\");\n        msg.todo = \"None\";\n        msg.payload = \"No Off Time\";\n    }\n} else {\n    node.warn(\"No ON time\");\n    msg.todo = \"None\";\n    msg.payload = \"No On Time\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 220,
        "wires": [
            [
                "79354e42f1f0d492"
            ]
        ]
    },
    {
        "id": "391e61a9d6a47b6b",
        "type": "base64",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "action": "",
        "property": "bvalue",
        "x": 680,
        "y": 280,
        "wires": [
            [
                "6df547a96ede2727"
            ]
        ]
    },
    {
        "id": "6df547a96ede2727",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create MQTT",
        "func": "msg['payload'] = \"{\\\"devEui\\\":\\\"\" + global.get(\"relay_dev_eui\") +\"\\\", \\\"confirmed\\\":false,\\\"fPort\\\":11,\\\"data\\\":\\\"\" + msg.bvalue + \"\\\"}\" // pump time functions\nnode.warn(\"Payload: \" + msg['payload']);\nmsg['topic'] = \"application/\" + global.get(\"app_id\") + \"/device/\" + global.get(\"relay_dev_eui\") +\"/command/down\";\nmsg['qos'] = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 280,
        "wires": [
            [
                "dc19f50e80bf1284"
            ]
        ]
    },
    {
        "id": "79354e42f1f0d492",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Valid?",
        "property": "todo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Downlink",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "None",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 220,
        "wires": [
            [
                "391e61a9d6a47b6b",
                "f3987535107e2e64"
            ],
            [
                "53c483fedce2d058"
            ]
        ]
    },
    {
        "id": "dc19f50e80bf1284",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "MQTT-Publish",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "eb21a8c4eb60d964",
        "x": 1216,
        "y": 540,
        "wires": []
    },
    {
        "id": "53c483fedce2d058",
        "type": "ui_audio",
        "z": "f6f2187d.f17ca8",
        "name": "Audio warning",
        "group": "64502c3307ffe74d",
        "voice": "urn:moz-tts:sapi:Microsoft Zira Desktop - English (United States)?en-US",
        "always": true,
        "x": 1200,
        "y": 260,
        "wires": []
    },
    {
        "id": "77e96690dfdc2b5c",
        "type": "e-mail",
        "z": "f6f2187d.f17ca8",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "bernd@giesecke.tk",
        "dname": "Send email",
        "x": 1204,
        "y": 486,
        "wires": []
    },
    {
        "id": "f3987535107e2e64",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create Email",
        "func": "msg.topic = 'Hydroponic pump times changed';\nmsg.payload = 'On time: ' + msg.payload.on_time/60 + ' min - Off time: ' + msg.payload.off_time/60 + ' min';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 220,
        "wires": [
            [
                "77e96690dfdc2b5c"
            ]
        ]
    },
    {
        "id": "2115a5b85d049cea",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create Email",
        "func": "msg.topic = 'Hydroponic nutrition level low';\nmsg.payload = 'Nutrition level: ' + msg['tds_value'] + ' ppm';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 576,
        "wires": [
            [
                "77e96690dfdc2b5c"
            ]
        ]
    },
    {
        "id": "622817e7f5ef06e7",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "TDS value low?",
        "property": "email",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 576,
        "wires": [
            [
                "2115a5b85d049cea"
            ]
        ]
    },
    {
        "id": "c5ab0dca3e55c9d0",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "d7227fcd391266e7",
        "order": 1,
        "width": 3,
        "height": 1
    },
    {
        "id": "74873e313aab3a8d",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "d7227fcd391266e7",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "eb21a8c4eb60d964",
        "type": "mqtt-broker",
        "name": "Chirpstack",
        "broker": "cs-mosquitto-1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d7227fcd391266e7",
        "type": "ui_group",
        "name": "Pump Control",
        "tab": "a3dafe33b12d76a8",
        "order": 2,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "64502c3307ffe74d",
        "type": "ui_group",
        "name": "Hydroponic Sensors",
        "tab": "a3dafe33b12d76a8",
        "order": 1,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a3dafe33b12d76a8",
        "type": "ui_tab",
        "name": "Hydroponic Control",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]