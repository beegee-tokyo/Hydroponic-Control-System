[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Get data from Chirpstack",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ea04ed65566cc035",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "Chirpstack-MQTT",
        "topic": "application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/#",
        "qos": "2",
        "datatype": "json",
        "broker": "eb21a8c4eb60d964",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 380,
        "wires": [
            [
                "811ed5459d95c417",
                "d2d86295e1f1fa64"
            ]
        ]
    },
    {
        "id": "811ed5459d95c417",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Check",
        "func": "var newMsg = [];\n// Watertank\nif (msg.topic.indexOf(\"ac1f09fffe08e88f\") != -1) {\n    if (typeof (msg.payload[\"object\"]) != \"undefined\") {\n        if (typeof (msg.payload[\"object\"][\"analog_in_61\"]) != \"undefined\") {\n            node.warn(\"analog_in_61 found \" + msg.payload[\"object\"][\"analog_in_61\"]);\n            msg['water_level'] = msg.payload[\"object\"][\"analog_in_61\"];\n            msg['battery'] = msg.payload[\"object\"][\"voltage_1\"];\n            msg['overflow'] = msg.payload[\"object\"][\"presence_63\"];\n            msg['low_level'] = msg.payload[\"object\"][\"presence_62\"];\n            msg['type'] = \"Waterlevel\";\n            msg.payload = msg['water_level'];\n\n            // If overflow send a downlink\n            if (msg['overflow'] == 1) {\n                node.warn(\"Overflow\");\n                msg['todo'] = \"Downlink\";\n                msg['payload'] = \"{\\\"devEui\\\":\\\"ac1f09fffe08e88f\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"qlUHAQGqVQ==\\\"}\"\n                msg['topic'] = \"application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe08e88f/command/down\";\n                msg['qos'] = 2;\n            }\n            else {\n                node.warn(\"No Overflow\");\n                msg['todo'] = \"None\";\n            }\n        }\n    }\n}\n\n// TDS sensor\nif (msg.topic.indexOf(\"ac1f09fffe0cf054\") != -1) { \n    if (typeof (msg.payload[\"object\"]) != \"undefined\") {\n        if (typeof (msg.payload[\"object\"][\"concentration_64\"]) != \"undefined\") { // concentration_64 == TDS value\n            node.warn(\"concentration_64 found\");\n            msg['tds_value'] = msg.payload[\"object\"][\"concentration_64\"];// concentration_64\n            msg['type'] = \"TDS-Sensor\";\n        }\n        if (typeof (msg.payload[\"object\"][\"presence_64\"]) != \"undefined\") { // concentration_64 == TDS value\n            node.warn(\"presence_64 found\");\n            var valve_status = msg.payload[\"object\"][\"presence_64\"];\n            // If overflow send a downlink\n            if (valve_status == 1) {\n                node.warn(\"TDS low, open valve \" + msg['tds_value']);\n                msg['todo'] = \"Downlink\";\n                msg['payload'] = \"{\\\"devEui\\\":\\\"ac1f09fffe067151\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"qlUBAQ==\\\"}\" // pump on AA550101\n                msg['topic'] = \"application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe067151/command/down\";\n                msg['qos'] = 2;\n            }\n            else {\n                node.warn(\"TDS Ok \" + msg['tds_value']);\n                msg['todo'] = \"None\";\n            }\n        } else {\n            node.warn(\"presence_64 not found\");\n        }\n\n        // Always set this last!\n        // msg.payload = msg['tds_value'];\n    }\n}\n\n// // Light sensor\n// if (msg.topic.indexOf(\"ac1f09fffe09016c\") != -1) {\n//     if (typeof (msg.payload[\"object\"]) != \"undefined\") {\n//         if (typeof (msg.payload[\"object\"][\"illuminance\"]) != \"undefined\") {\n//             node.warn(\"illuminance\");\n//             msg['illuminance'] = msg.payload[\"object\"][\"illuminance\"];\n//             msg['type'] = \"Light Sensor\";\n\n//             // If overflow send a downlink\n//             if (msg['illuminance'] >= 50) {\n//                 node.warn(\"Bright, lights off: \" + msg['illuminance']);\n//                 msg['todo'] = \"Downlink\";\n//                 msg['payload'] = \"{\\\"devEui\\\":\\\"ac1f09fffe067151\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"qlUAAA==\\\"}\" // AA550101\n//                 msg['topic'] = \"application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe067151/command/down\";\n//                 msg['qos'] = 2;\n//             }\n//             else {\n//                 node.warn(\"Dark, lights on: \" + msg['illuminance']);\n//                 msg['todo'] = \"Downlink\";\n//                 msg['payload'] = \"{\\\"devEui\\\":\\\"ac1f09fffe067151\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"qlUAAQ==\\\"}\" // AA550100\n//                 msg['topic'] = \"application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe067151/command/down\";\n//                 msg['qos'] = 2;\n//             }\n//         }\n//     }\n// }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nnode.warn(\"Restart V2\");",
        "libs": [],
        "x": 250,
        "y": 380,
        "wires": [
            [
                "ef54917c25ea6a5c"
            ]
        ]
    },
    {
        "id": "06331141f0acd9d6",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Watertank Actions",
        "property": "todo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Downlink",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "None",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 480,
        "wires": [
            [
                "dec0b599f39008c6",
                "e8218aba6d3e1046",
                "40144e19155147e2",
                "07c765f85dd9d8de"
            ],
            [
                "40144e19155147e2",
                "07c765f85dd9d8de"
            ]
        ]
    },
    {
        "id": "dec0b599f39008c6",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "Close water tank valve",
        "topic": "application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe08e88f/command/down",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "eb21a8c4eb60d964",
        "x": 1180,
        "y": 540,
        "wires": []
    },
    {
        "id": "ef54917c25ea6a5c",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "What Device",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TDS-Sensor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Waterlevel",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Light Sensor",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 380,
        "wires": [
            [
                "91d915157e19cea0"
            ],
            [
                "06331141f0acd9d6"
            ],
            [
                "95caf47240db4101"
            ],
            []
        ]
    },
    {
        "id": "91d915157e19cea0",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "TDS Sensor Actions",
        "property": "todo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Downlink",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "None",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 360,
        "wires": [
            [
                "3f9aeac3ed75ee39",
                "7397e5aae123d3b8"
            ],
            [
                "7397e5aae123d3b8"
            ]
        ]
    },
    {
        "id": "3f9aeac3ed75ee39",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "Open hydroponic nutrient valve",
        "topic": "application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe067151/command/down",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "eb21a8c4eb60d964",
        "x": 1150,
        "y": 300,
        "wires": []
    },
    {
        "id": "95caf47240db4101",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Light Sensor Actions",
        "property": "todo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Downlink",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "None",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 660,
        "wires": [
            [
                "c271c55c11504030"
            ],
            []
        ]
    },
    {
        "id": "c271c55c11504030",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "Switch lights on/off",
        "topic": "application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe067151/command/down",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "eb21a8c4eb60d964",
        "x": 1210,
        "y": 660,
        "wires": []
    },
    {
        "id": "e8218aba6d3e1046",
        "type": "ui_audio",
        "z": "f6f2187d.f17ca8",
        "name": "Overflow! Check Valve",
        "group": "cd6991c7755f2851",
        "voice": "urn:moz-tts:sapi:Microsoft Zira - English (United States)?en-US",
        "always": "",
        "x": 1180,
        "y": 500,
        "wires": []
    },
    {
        "id": "07ca97fdc5512cbc",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "64502c3307ffe74d",
        "order": 1,
        "width": "3",
        "height": "2",
        "passthru": false,
        "label": "Nutrition Refill",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"devEui\":\"ac1f09fffe067151\",\"confirmed\":false,\"fPort\":10,\"data\":\"qlUDAQ==\"}",
        "payloadType": "json",
        "topic": "\"application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe067151/command/down\"",
        "topicType": "str",
        "x": 80,
        "y": 300,
        "wires": [
            [
                "3f9aeac3ed75ee39"
            ]
        ]
    },
    {
        "id": "40144e19155147e2",
        "type": "ui_gauge",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "cd6991c7755f2851",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Watertank level",
        "label": "cm",
        "format": "{{water_level}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#ff0000",
            "#e6e600",
            "#00ff00"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1200,
        "y": 460,
        "wires": []
    },
    {
        "id": "07c765f85dd9d8de",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "name": "Water level",
        "group": "cd6991c7755f2851",
        "order": 2,
        "width": "6",
        "height": "20",
        "label": "Water level",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "7397e5aae123d3b8",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Prepare Graph",
        "func": "msg.payload = msg['tds_value'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 360,
        "wires": [
            [
                "8be4ecbf5907c93e"
            ]
        ]
    },
    {
        "id": "ce4a30598d147719",
        "type": "ui_slider",
        "z": "f6f2187d.f17ca8",
        "name": "Nutrition Level",
        "label": "Nutrition Level",
        "tooltip": "",
        "group": "64502c3307ffe74d",
        "order": 2,
        "width": "6",
        "height": "3",
        "passthru": false,
        "outs": "end",
        "topic": "value",
        "topicType": "msg",
        "min": "600",
        "max": "1600",
        "step": "100",
        "className": "",
        "x": 80,
        "y": 140,
        "wires": [
            [
                "dfa21cf220786d7e"
            ]
        ]
    },
    {
        "id": "dfa21cf220786d7e",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create Payload",
        "func": "node.warn(\"Received: \" + msg.payload);\nswitch (msg.payload)\n{\n    case 600:\n        node.warn(\"level 600\");\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x02, 0x58]);\n        break;\n    case 700:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x02, 0xBC]);\n        break;\n    case 800:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x03, 0x20]);\n        break;\n    case 900:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x03, 0x84]);\n        break;\n    case 1000:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x03, 0xe8]);\n        break;\n    case 1100:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x04, 0x4c]);\n        break;\n    case 1200:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x04, 0xb0]);\n        break;\n    case 1300:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x05, 0x14]);\n        break;\n    case 1400:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x05, 0x78]);\n        break;\n    case 1500:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x05, 0xdc]);\n        break;\n    case 1600:\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x01, 0x00, 0x00, 0x06, 0x40]);\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 140,
        "wires": [
            [
                "0ca72e9092a1eba9"
            ]
        ]
    },
    {
        "id": "0ca72e9092a1eba9",
        "type": "base64",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "action": "",
        "property": "bvalue",
        "x": 440,
        "y": 140,
        "wires": [
            [
                "cd08a6cef36056c2"
            ]
        ]
    },
    {
        "id": "cd08a6cef36056c2",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create MQTT",
        "func": "msg['payload'] = \"{\\\"devEui\\\":\\\"ac1f09fffe0cf054\\\", \\\"confirmed\\\":false,\\\"fPort\\\":11,\\\"data\\\":\\\"\"+msg.bvalue+\"\\\"}\" // new nutrition value\nnode.warn(\"Payload: \" + msg['payload']);\nmsg['topic'] = \"application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe0cf054/command/down\";\nmsg['qos'] = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 140,
        "wires": [
            [
                "82878dad56d236e3"
            ]
        ]
    },
    {
        "id": "82878dad56d236e3",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "Set hydroponic nutrient valve",
        "topic": "application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe0cf054/command/down",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "eb21a8c4eb60d964",
        "x": 1150,
        "y": 140,
        "wires": []
    },
    {
        "id": "8bc2cba06df853f0",
        "type": "ui_switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "label": "Pump Override",
        "tooltip": "",
        "group": "64502c3307ffe74d",
        "order": 2,
        "width": "3",
        "height": "3",
        "passthru": true,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 80,
        "y": 80,
        "wires": [
            [
                "decf2eaf11f7da9c"
            ]
        ]
    },
    {
        "id": "decf2eaf11f7da9c",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create Payload",
        "func": "node.warn(\"Received: \" + msg.payload);\nswitch (msg.payload)\n{\n    case true:\n        node.warn(\"Pump On\");\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x00, 0x01]);\n        break;\n    case false:\n        node.warn(\"Pump Off\");\n        msg.bvalue = Buffer.from([0xaa, 0x55, 0x00, 0x00]);\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 80,
        "wires": [
            [
                "c95baa92a2ee2b82"
            ]
        ]
    },
    {
        "id": "c95baa92a2ee2b82",
        "type": "base64",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "action": "",
        "property": "bvalue",
        "x": 440,
        "y": 80,
        "wires": [
            [
                "8099fc818e608ecf"
            ]
        ]
    },
    {
        "id": "8099fc818e608ecf",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create MQTT",
        "func": "msg['payload'] = \"{\\\"devEui\\\":\\\"ac1f09fffe067151\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"\"+msg.bvalue+\"\\\"}\" // water pump on/off\nnode.warn(\"Payload: \" + msg['payload']);\nmsg['topic'] = \"application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe067151/command/down\";\nmsg['qos'] = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 80,
        "wires": [
            [
                "490bb84411220a31"
            ]
        ]
    },
    {
        "id": "490bb84411220a31",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "Start/Stop water pump",
        "topic": "application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/ac1f09fffe067151/command/down",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "eb21a8c4eb60d964",
        "x": 1180,
        "y": 80,
        "wires": []
    },
    {
        "id": "d2d86295e1f1fa64",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Check",
        "func": "// TDS sensor\nif (msg.topic.indexOf(\"ac1f09fffe0cf054\") != -1) {\n    if (typeof (msg.payload[\"object\"]) != \"undefined\") {\n        if (typeof (msg.payload[\"object\"][\"concentration_64\"]) != \"undefined\") { // concentration_64 == TDS value\n            node.warn(\"concentration_64 found\");\n            msg['tds_value'] = msg.payload[\"object\"][\"concentration_64\"];\n            node.warn(\"tds_value \" + msg['tds_value']);\n        }\n        else {\n            msg['tds_value'] = 0;\n        }\n        if (typeof (msg.payload[\"object\"][\"analog_in_65\"]) != \"undefined\") { // analog_in_65 == pH value\n            node.warn(\"analog_in_65 found\");\n            msg['ph_value'] = Math.round((msg.payload[\"object\"][\"analog_in_65\"]) * 10.0);\n            node.warn(\"ph_value \" + msg['ph_value']);\n        }\n        else {\n            msg['ph_value'] = 0;\n        }\n        if (typeof (msg.payload[\"object\"][\"temperature\"]) != \"undefined\") { // temperature\n            node.warn(\"temperature found\");\n            msg['temp_value'] = Math.round((msg.payload[\"object\"][\"temperature\"]) * 10.0);\n            node.warn(\"temp_value \" + msg['temp_value']);\n        }\n        else {\n            msg['temp_value'] = 0;\n        }\n        if (typeof (msg.payload[\"object\"][\"humidity\"]) != \"undefined\") { // humidity\n            node.warn(\"humidity found\");\n            msg['humid_value'] = Math.round((msg.payload[\"object\"][\"humidity\"]) * 10.0);\n            node.warn(\"humid_value \" + msg['humid_value']);\n        }\n        else {\n            msg['humid_value'] = 0;\n        }\n\n        msg.bvalue = Buffer.from([0xAA, 0x55, 0xFF, (msg['tds_value'] >> 8) & 0x00ff, (msg['tds_value']) & 0x00ff\n            , (msg['ph_value'] >> 8) & 0x00ff, (msg['ph_value']) & 0x00ff\n            , (msg['temp_value'] >> 8) & 0x00ff, (msg['temp_value']) & 0x00ff\n            , (msg['humid_value'] >> 8) & 0x00ff, (msg['humid_value']) & 0x00ff]);\n        node.warn(\"Buffer \" + msg.bvalue);\n\n        msg.todo = \"OK\";\n    }\n    else\n    {\n        msg.todo = \"NOK\";\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nnode.warn(\"Restart V2\");",
        "libs": [],
        "x": 230,
        "y": 200,
        "wires": [
            [
                "3f9d0a22b6ae8d08"
            ]
        ]
    },
    {
        "id": "094d0eb0c7f8a69f",
        "type": "base64",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "action": "",
        "property": "bvalue",
        "x": 480,
        "y": 200,
        "wires": [
            [
                "16fcd54f00538432"
            ]
        ]
    },
    {
        "id": "16fcd54f00538432",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Create MQTT",
        "func": "msg['payload'] = \"{\\\"devEui\\\":\\\"AC1F09FFFE0A7994\\\", \\\"confirmed\\\":false,\\\"fPort\\\":10,\\\"data\\\":\\\"\"+msg.bvalue+\"\\\"}\" // water pump on/off\nnode.warn(\"Payload: \" + msg['payload']);\nmsg['topic'] = \"application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/AC1F09FFFE0A7994/command/down\";\nmsg['qos'] = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 200,
        "wires": [
            [
                "1d415c4c93f4e8e5"
            ]
        ]
    },
    {
        "id": "1d415c4c93f4e8e5",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "Update Display",
        "topic": "application/a852689f-d9f0-4d50-86b7-b073a96f5b7d/device/AC1F09FFFE0A7994/command/down",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "eb21a8c4eb60d964",
        "x": 1200,
        "y": 200,
        "wires": []
    },
    {
        "id": "3f9d0a22b6ae8d08",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Data?",
        "property": "todo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NOK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "094d0eb0c7f8a69f"
            ],
            []
        ]
    },
    {
        "id": "8be4ecbf5907c93e",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "cd6991c7755f2851",
        "order": 3,
        "width": "6",
        "height": "3",
        "label": "TDS sensor",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1fbe12acd2c73cdf",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Inputs",
        "info": "Manual from UI or from Chirpstack MQTT",
        "x": 50,
        "y": 40,
        "wires": []
    },
    {
        "id": "3b7781f0c9d34dfc",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Data processing and action preparation",
        "info": "",
        "x": 330,
        "y": 40,
        "wires": []
    },
    {
        "id": "7b03ba1ba02d280e",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Output and Actions",
        "info": "",
        "x": 1190,
        "y": 40,
        "wires": []
    },
    {
        "id": "eb21a8c4eb60d964",
        "type": "mqtt-broker",
        "name": "Chirpstack",
        "broker": "172.17.0.7",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "cd6991c7755f2851",
        "type": "ui_group",
        "name": "Water tank control",
        "tab": "6ca543b8c168538e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "64502c3307ffe74d",
        "type": "ui_group",
        "name": "Hydroponic Sensors",
        "tab": "a3dafe33b12d76a8",
        "order": 1,
        "disp": true,
        "width": "11",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6ca543b8c168538e",
        "type": "ui_tab",
        "name": "Water Tank",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a3dafe33b12d76a8",
        "type": "ui_tab",
        "name": "Hydroponic Control",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]